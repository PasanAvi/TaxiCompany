@model TaxiCompany.Models.Customer

@{
    ViewData["Title"] = "Details";
}

<br />
<br />
<br />

<h2>Details</h2>

<div>
    <h4>Customer</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Lastname)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Lastname)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Firstname)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Firstname)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Career)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Career)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.gender)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.gender)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Age)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Age)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Homeaddress)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Homeaddress)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Officeaddress)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Officeaddress)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Telnumber)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Telnumber)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Email)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Email)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Branch)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Branch.City)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Status)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Status)
        </dd>
    </dl>
</div>

@if (Model.Status != Customer.CustomerStatus.Approved)
{
    @if ((await AuthorizationService.AuthorizeAsync(User, Model, TaxiCompanyOperations.Approve)).Succeeded)
    {
        <form asp-action="SetStatus" asp-controller="Customers" style="display:inline" method="post">
            <input type="hidden" name="id" value="@Model.ID" />
            <input type="hidden" name="status" value="@Customer.CustomerStatus.Approved" />
            <button type="submit" class="btn btn-success btn-xs">Approve</button>
        </form>
    }
}
@if (Model.Status != Customer.CustomerStatus.Rejected)
{
    @if ((await AuthorizationService.AuthorizeAsync(User, Model, TaxiCompanyOperations.Reject)).Succeeded)
    {
        <form asp-action="SetStatus" asp-controller="Customers" style="display:inline" method="post">
            <input type="hidden" name="id" value="@Model.ID" />
            <input type="hidden" name="status" value="@Customer.CustomerStatus.Rejected" />
            <button type="submit" class="btn btn-danger btn-xs">Reject</button>
        </form>
    }
}

        <div>
            @if ((await AuthorizationService.AuthorizeAsync(User, Model, TaxiCompanyOperations.Update)).Succeeded)
            {
                <a asp-action="Edit" asp-route-id="@Model.ID">Edit</a>
            }
            |
            <a asp-action="Index">Back to List</a>
        </div>
